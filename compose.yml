version: '3'
services:
    redis:
        image: redis
        ports:
            - "30001:6379"
        networks:
            - crypto-network
        volumes:
            - ./redis.conf:/usr/local/etc/redis/redis.conf
            - ./backup/redis_data:/data
        command: redis-server /usr/local/etc/redis/redis.conf

    postgres:
        image: postgres
        ports:
            - "30002:5432"
        networks:
            - crypto-network
        volumes:
            - ./backup/postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        healthcheck:
            test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
            interval: 5s
            timeout: 5s
            retries: 10

    migrator:
        build:
            context: .
            dockerfile: database/dockerfile
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - crypto-network
        environment:
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        command: [ 'alembic', 'upgrade', 'head' ]

    stream:
        build:
            context: .
            dockerfile: stream/dockerfile
        depends_on:
            - redis
            - postgres
            - migrator
        networks:
            - crypto-network
        restart: always
        environment:
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_DB: 0
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - ./logs:/app/logs
        cpus: 0.1
        mem_limit: 200m
        memswap_limit: 200m

networks:
    crypto-network:
        driver: bridge
